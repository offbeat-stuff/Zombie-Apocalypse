diff --git a/src/main/java/io/github/offbeat_stuff/zombie_apocalypse/config/SpawnHandler.java b/src/main/java/io/github/offbeat_stuff/zombie_apocalypse/config/SpawnHandler.java
index 38b2cf6..c01a15e 100644
--- a/src/main/java/io/github/offbeat_stuff/zombie_apocalypse/config/SpawnHandler.java
+++ b/src/main/java/io/github/offbeat_stuff/zombie_apocalypse/config/SpawnHandler.java
@@ -15,9 +15,9 @@ import net.minecraft.entity.Entity.RemovalReason;
 import net.minecraft.entity.EntityType;
 import net.minecraft.entity.SpawnGroup;
 import net.minecraft.entity.SpawnReason;
-import net.minecraft.registry.tag.BlockTags;
 import net.minecraft.server.network.ServerPlayerEntity;
 import net.minecraft.server.world.ServerWorld;
+import net.minecraft.tag.BlockTags;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.Direction;
 import net.minecraft.util.math.Direction.Axis;
@@ -77,8 +77,7 @@ public class SpawnHandler {
   private static boolean isBlockedAtFoot(ServerWorld world, BlockPos pos,
                                          BlockState state) {
     return state.emitsRedstonePower() ||
-        state.isIn(BlockTags.PREVENT_MOB_SPAWNING_INSIDE) ||
-        state.isIn(BlockTags.INVALID_SPAWN_INSIDE);
+        state.isIn(BlockTags.PREVENT_MOB_SPAWNING_INSIDE);
   }
 
   private static boolean isSpawnableForZombie(ServerWorld world, BlockPos pos) {
@@ -140,7 +139,8 @@ public class SpawnHandler {
                               minPlayerDistance)) {
       return false;
     }
-    var zombie = EntityType.ZOMBIE.spawn(world, pos, SpawnReason.NATURAL);
+    var zombie = EntityType.ZOMBIE.spawn(world, null, null, null, pos,
+                                         SpawnReason.NATURAL, false, false);
     PotionEffectHandler.applyRandomPotionEffects(zombie);
     if (!world.isSpaceEmpty(zombie) ||
         !world.doesNotIntersectEntities(zombie)) {
